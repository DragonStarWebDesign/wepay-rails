= wepay-rails

Wepay-Rails allows your rails app to accept payments with Wepay (http://www.wepay.com).

To install it, add this to your Gemfile

    gem 'wepay-rails'

You need to also create a new model called WepayCheckoutRecord. It will be updated by wepay's IPN system as changes to the checkout change - such as the status.
Wepay-rails handles those IPN notifications for you. You can write observers watching the WepayCheckoutRecord model if you need to have
something specific occur when the checkout changes.

To create your WepayCheckoutRecord model and migration:

    script/rails g wepay_rails:install

This will create 3 files for you, a migration file for a table to hold the checkout results, the model and a wepay.yml.example file. Next run:

    rake db:migrate

Modify config/wepay.yml.example to your needs and copy it to config/wepay.yml.

Assuming that you have:

1. created an account on wepay
2. created a user to accept the payments
3. created your application for your account
4. set your wepay.yml file with the info it needs to talk to the wepay api minus the access_token

You can now get your access token.

To fetch your access_token, open a browser and go to:

    your.railsapp.com/wepay/authorize

Login at the prompt or register. You will be sent back to your app and you should have gotten an access_token. Copy it to your wepay.yml
file and restart your app.

You will have to set up a few new controllers in your rails app to handle callbacks and redirects from wepay.
I created one called finalize_controller and I use it for a landing page when the customer is finished paying
their order. The other controller I created is a checkout_controller - I send my customers to it when they click checkout
in the cart. Your app is surely differnt than mine. Do what makes sense to you.
For now, here's what I am doing in my rails app to handle it...

  app
    |_ controllers
                 |_ purchase
                        |_ checkout_controller.rb
                        |_ finalize_controller.rb

You will need to set the location of these files in your wepay.yml file. The directives are:

    after_authorize_redirect_uri: "http://www.example.com/purchase/checkout"
    after_checkout_redirect_uri: "http://www.example.com/purchase/finalize"

Finally, your checkout controller (or some controller that will interact with the Wepay API) - notice it includes WepayRails::Payments:

    class Purchase::CheckoutController < ApplicationController
        include WepayRails::Payments

        before_filter :authenticate_user! # I am using devise - this line depends on your authentication scheme

        def index
            cart = current_user.cart # EXAMPLE - get my shopping cart

            checkout_params = {
                :amount => cart.grand_total,
                :short_description => cart.short_description,
                :long_description => cart.long_description,
            }

            # Finally, send the user off to wepay so you can get paid! - CASH MONEY
            init_checkout_and_send_user_to_wepay(checkout_params)
        end
    end

The controller I use for finalizing the checkout - AKA - the controller the user is sent back to after his/her trip to
wepay to checkout.

    class Purchase::FinalizeController < ApplicationController
      def index
        wcr  = WepayCheckoutRecord.find_by_checkout_id(params[:checkout_id])

        # Set the association of the wepay checkout record to my cart - then, on to order.
        cart = current_account.cart
        cart.wepay_checkout_record = wcr
        cart.save!

        # Convert cart to an order?? Move to observer of WepayCheckoutRecord??
        cart.convert_cart_to_order if wcr.state == 'authorized'

        render :text => "Hooray - you bought some widgets!"
      end
    end


== Special Thanks to additional contributers of Wepay-Rails
* lucisferre (Chris Nicola) https://github.com/lucisferre


== Contributing to wepay-rails
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 Adam Medeiros. See LICENSE.txt for
further details.

